grammar HaskellExpressions;

expressions : expression ('\n' expression)+ EOF;

expression : e;
e : e ('$'|'$!') e
  | e ('>>'|'>>=') e
  | e '||' <associativity=right> e 
  | e '&&' <associativity=right> e
  | e ('=='|'/='|'<'|'<='|'>='|'>') e
  | e ':' <associativity=right> e
  | '-' e
  | e ('+'|'-') e
  | e ('*'|'/') e
  | e ('^'|'^^'|'**') e
  | e '.' <associativity=right> e
  | sExpr;

sExpr	:	NUMBER 
      | BOOL 
      | ID;

NUMBER	:	('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9')+;
BOOL    : 'True' | 'False';
ID      : 'f'|'g'|'h';